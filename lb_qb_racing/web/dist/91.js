"use strict";(self.webpackChunklb_qb_racing=self.webpackChunklb_qb_racing||[]).push([[91],{9091:(e,t,n)=>{n.r(t);var r=n(7294),a=n(3935),o=n(3727),c=n(2609),l=n(4208),i=n(6501),u=n(4810),s=n(9041),f=n(3626),d=n(5974),p=n(5137),h=n(6115),m=p.Z[900],y=h.Z.white,b=(h.Z.black,{light:{palette:{mode:"light",primary:{main:m,dark:p.Z[700],light:p.Z[300],contrastText:y},secondary:{main:"#d32f2f",light:"#eb4242",dark:"#941212",contrastText:y},success:{main:"#2196f3",contrastText:y}}},dark:{palette:{mode:"dark",primary:{main:m,dark:p.Z[700],light:p.Z[300],contrastText:y},secondary:{main:"#d32f2f",light:"#eb4242",dark:"#941212",contrastText:y},success:{main:"#2196f3",contrastText:y}}}});const v=function(e){var t=e.children,n=e.mode,a=b[n],o=(0,f.Z)(a);return r.createElement(d.Z,{theme:o},t)};var x,g,w=n(2734),E=n(2658),z=n(932),k="4rem",Z=z.Z.div(T||(x=["\n  display: flex;\n  align-items: center;\n\n  min-height: ",";\n  padding-left: 1.5rem;\n  background-color: ",";\n"],g=["\n  display: flex;\n  align-items: center;\n\n  min-height: ",";\n  padding-left: 1.5rem;\n  background-color: ",";\n"],Object.defineProperty?Object.defineProperty(x,"raw",{value:g}):x.raw=g,T=x),k,(function(e){return e.backgroundColor}));const S=function(e){var t=e.children,n=(0,w.Z)();return r.createElement(Z,{backgroundColor:n.palette.primary.main},r.createElement(E.Z,{variant:"h5",color:"primary.contrastText"},t))};var T,C=n(4362),R=n(4111),I=n(7515),q=n(4172),L=n(2004),P=n(5977);const G=function(){var e=(0,P.TH)(),t=(0,r.useState)(""),n=t[0],a=t[1];return(0,r.useEffect)((function(){a(e.pathname.replace("/",""))}),[e]),r.createElement(q.Z,{value:n,onChange:function(e,t){a(t)},showLabels:!0},r.createElement(L.Z,{label:"Races",value:"",component:o.OL,icon:r.createElement(I.Z,null),to:"/"}),r.createElement(L.Z,{label:"Setup race",value:"/setupRace",color:"secondary",component:o.OL,icon:r.createElement(C.Z,null),to:"/setupRace"}),r.createElement(L.Z,{label:"Tracks",value:"/tracks",color:"secondary",component:o.OL,icon:r.createElement(R.Z,null),to:"/tracks"}))};var N,O,D,j=n(7720),A=n(9062),J=n(6447),U=n(2804);!function(e){e.GetTracks="npwd:qb-racing:getTracks",e.SendTracks="npwd:qb-racing:sendTracks",e.GetRaces="npwd:qb-racing:getRaces",e.SendRaces="npwd:qb-racing:sendRaces",e.GetUser="npwd:qb-racing:getUser",e.SendUser="npwd:qb-racing:sendUser",e.CreateTrack="npwd:qb-racing:createTrack",e.DeleteTrack="npwd:qb-racing:deleteTrack",e.SendDeleteTrack="npwd:qb-racing:sendDeleteTrack",e.SetupRace="npwd:qb-racing:setupRace",e.JoinRace="npwd:qb-racing:joinRace",e.LeaveRace="npwd:qb-racing:leaveRace",e.StartRace="npwd:qb-racing:startRace",e.StopRace="npwd:qb-racing:stopRace"}(N||(N={})),function(e){e.SetupRace="qb-lapraces:server:SetupRace",e.JoinRace="qb-lapraces:server:JoinRace",e.CreateTrack="qb-lapraces:server:CreateLapRace",e.LeaveRace="qb-lapraces:server:LeaveRace",e.StartRace="qb-lapraces:server:StartRace",e.WaitingDistanceCheck="qb-lapraces:client:WaitingDistanceCheck",e.GetRacingData="qb-lapraces:server:GetRacingData",e.GetIsAuthorizedToCreateRaces="qb-lapraces:server:IsAuthorizedToCreateRaces",e.UpdateRaceState="qb-lapraces:server:UpdateRaceState",e.CancelRace="qb-lapraces:server:CancelRace"}(O||(O={})),function(e){e.UpdateData="npwd:qb-racing:updateData",e.GetDistanceToRace="npwd:qb-racing:getDistanceToRace",e.GetIsAuthorizedToCreateRaces="npwd:qb-racing:getIsAuthorizedToCreateRaces"}(D||(D={}));const W=JSON.parse('{"u2":"lb_qb_racing"}');const _=function(e,t,n){return r=this,a=void 0,c=function(){var n;return function(e,t){var n,r,a,o,c={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return o={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function l(o){return function(l){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;c;)try{if(n=1,r&&(a=2&o[0]?r.return:o[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,o[1])).done)return a;switch(r=0,a&&(o=[2&o[0],a.value]),o[0]){case 0:case 1:a=o;break;case 4:return c.label++,{value:o[1],done:!1};case 5:c.label++,r=o[1],o=[0];continue;case 7:o=c.ops.pop(),c.trys.pop();continue;default:if(!((a=(a=c.trys).length>0&&a[a.length-1])||6!==o[0]&&2!==o[0])){c=0;continue}if(3===o[0]&&(!a||o[1]>a[0]&&o[1]<a[3])){c.label=o[1];break}if(6===o[0]&&c.label<a[1]){c.label=a[1],a=o;break}if(a&&c.label<a[2]){c.label=a[2],c.ops.push(o);break}a[2]&&c.ops.pop(),c.trys.pop();continue}o=t.call(e,c)}catch(e){o=[6,e],r=0}finally{n=a=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,l])}}}(this,(function(r){switch(r.label){case 0:return n={method:"post",headers:{"Content-Type":"application/json; charset=UTF-8"},body:JSON.stringify(t)},[4,fetch("https://".concat(W.u2,"/").concat(e),n)];case 1:return[4,r.sent().json()];case 2:return[2,r.sent()]}}))},new((o=void 0)||(o=Promise))((function(e,t){function n(e){try{i(c.next(e))}catch(e){t(e)}}function l(e){try{i(c.throw(e))}catch(e){t(e)}}function i(t){var r;t.done?e(t.value):(r=t.value,r instanceof o?r:new o((function(e){e(r)}))).then(n,l)}i((c=c.apply(r,a||[])).next())}));var r,a,o,c};var K,B,Y,M=function(){return M=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e},M.apply(this,arguments)},F=[{coords:{y:-3326.2294921875,x:1014.8711547851562,z:5.60950803756713},offset:{left:{y:-3333.22900390625,x:1014.798095703125,z:5.60600423812866},right:{y:-3319.22998046875,x:1014.9442138671875,z:5.61301183700561}}},{coords:{y:-3305.395263671875,x:758.9427490234375,z:17.72601699829101},offset:{left:{y:-3310.556396484375,x:755.883056640625,z:17.75870132446289},right:{y:-3300.234130859375,x:762.00244140625,z:17.69333267211914}}},{coords:{y:-2939.4111328125,x:726.97509765625,z:5.94329977035522},offset:{left:{y:-2939.117919921875,x:720.9822998046875,z:5.95945930480957},right:{y:-2939.704345703125,x:732.9678955078125,z:5.92714023590087}}},{coords:{y:-2568.990966796875,x:731.4857788085938,z:18.91028213500976},offset:{left:{y:-2568.935791015625,x:719.4859008789062,z:18.92338562011718},right:{y:-2569.046142578125,x:743.4856567382812,z:18.89717864990234}}},{coords:{y:-2300.66357421875,x:767.5223388671875,z:27.57734298706054},offset:{left:{y:-2299.87939453125,x:757.553466796875,z:27.50014877319336},right:{y:-2301.44775390625,x:777.4912109375,z:27.65453720092773}}},{coords:{y:-2054.506591796875,x:648.1947631835938,z:29.15009880065918},offset:{left:{y:-2069.483642578125,x:647.3659057617188,z:29.1414794921875},right:{y:-2039.529541015625,x:649.0236206054688,z:29.15871810913086}}},{coords:{y:-1999.488525390625,x:428.29486083984375,z:22.86323165893554},offset:{left:{y:-2010.50341796875,x:418.1131286621094,z:22.92967414855957},right:{y:-1988.4736328125,x:438.4765930175781,z:22.79678916931152}}},{coords:{y:-1720.058349609375,x:124.49178314208984,z:28.87103843688965},offset:{left:{y:-1725.6339111328125,x:120.25945281982422,z:28.84035301208496},right:{y:-1714.4827880859375,x:128.72410583496094,z:28.90172386169433}}},{coords:{y:-1630.587646484375,x:119.59253692626953,z:29.03592681884765},offset:{left:{y:-1618.3955078125,x:112.7112045288086,z:29.02834510803222},right:{y:-1642.77978515625,x:126.47386932373047,z:29.04350852966308}}},{coords:{y:-1545.7320556640625,x:110.46044921875,z:29.06584358215332},offset:{left:{y:-1554.60107421875,x:102.37845611572266,z:28.9210147857666},right:{y:-1536.863037109375,x:118.54244232177734,z:29.21067237854004}}},{coords:{y:-1455.729736328125,x:105.0508041381836,z:29.03458213806152},offset:{left:{y:-1445.7244873046875,x:93.87516021728516,z:29.04595565795898},right:{y:-1465.7349853515625,x:116.22644805908203,z:29.02320861816406}}},{coords:{y:-1400.35009765625,x:133.87002563476562,z:28.97974014282226},offset:{left:{y:-1404.38916015625,x:119.42774200439453,z:29.30660247802734},right:{y:-1396.31103515625,x:148.31231689453125,z:28.65287780761718}}},{coords:{y:-1364.318359375,x:-11.78301906585693,z:29.0519790649414},offset:{left:{y:-1379.3175048828125,x:-11.64023113250732,z:28.9856014251709},right:{y:-1349.3192138671875,x:-11.92580699920654,z:29.11835670471191}}},{coords:{y:-1277.676513671875,x:-103.01280212402344,z:29.04043388366699},offset:{left:{y:-1278.9691162109375,x:-117.9570083618164,z:29.0461254119873},right:{y:-1276.3839111328125,x:-88.06859588623047,z:29.03474235534668}}},{coords:{y:-1069.222900390625,x:-74.01898193359375,z:26.96059036254882},offset:{left:{y:-1063.7020263671875,x:-87.96604919433594,z:26.9647216796875},right:{y:-1074.7437744140625,x:-60.07191467285156,z:26.95645904541015}}},{coords:{y:-876.6890869140625,x:-5.81572437286376,z:29.87505149841308},offset:{left:{y:-873.8500366210938,x:-13.29500961303711,z:29.8876781463623},right:{y:-879.5281372070312,x:1.66356134414672,z:29.86242485046386}}},{coords:{y:-733.581298828125,x:-38.72209167480469,z:32.65071105957031},offset:{left:{y:-743.1060791015625,x:-41.76612091064453,z:32.76004791259765},right:{y:-724.0565185546875,x:-35.67806243896484,z:32.54137420654297}}},{coords:{y:-643.9555053710938,x:-94.31793212890625,z:35.99441909790039},offset:{left:{y:-639.35107421875,x:-108.59375,z:35.97761917114258},right:{y:-648.5599365234375,x:-80.0421142578125,z:36.0112190246582}}},{coords:{y:-325.399169921875,x:8.68120288848877,z:44.22954177856445},offset:{left:{y:-325.9370422363281,x:-6.29937744140625,z:43.68841171264648},right:{y:-324.8612976074219,x:23.66178321838379,z:44.77067184448242}}},{coords:{y:-239.1595458984375,x:-63.67224884033203,z:44.95240020751953},offset:{left:{y:-250.96920776367188,x:-69.10563659667969,z:45.05325698852539},right:{y:-227.34988403320312,x:-58.23886489868164,z:44.85154342651367}}},{coords:{y:-182.48114013671875,x:-325.6580505371094,z:38.77323150634765},offset:{left:{y:-190.890380859375,x:-322.4512023925781,z:38.7454833984375},right:{y:-174.0718994140625,x:-328.8648986816406,z:38.80097961425781}}},{coords:{y:-173.82305908203125,x:-444.15789794921875,z:37.15604019165039},offset:{left:{y:-178.28297424316406,x:-453.1080017089844,z:37.08592987060547},right:{y:-169.36314392089844,x:-435.2077941894531,z:37.22615051269531}}},{coords:{y:-75.94364929199219,x:-525.5850219726562,z:40.0564956665039},offset:{left:{y:-85.03802490234375,x:-529.743408203125,z:40.04509353637695},right:{y:-66.84927368164062,x:-521.4266357421875,z:40.06789779663086}}},{coords:{y:56.57625579833984,x:-550.4647216796875,z:49.79949188232422},offset:{left:{y:57.35966491699219,x:-557.420654296875,z:49.83134078979492},right:{y:55.7928466796875,x:-543.5087890625,z:49.76764297485351}}},{coords:{y:198.10931396484375,x:-541.9577026367188,z:74.82862854003906},offset:{left:{y:198.08737182617188,x:-549.9575805664062,z:74.7896957397461},right:{y:198.13125610351562,x:-533.9578247070312,z:74.86756134033203}}},{coords:{y:328.0506896972656,x:-532.1094970703125,z:82.71746826171875},offset:{left:{y:328.0096740722656,x:-540.1093139648438,z:82.68138885498047},right:{y:328.0917053222656,x:-524.1096801757812,z:82.75354766845703}}},{coords:{y:540.0193481445312,x:-533.914306640625,z:110.69298553466797},offset:{left:{y:546.1546630859375,x:-540.4978637695312,z:110.81407928466797},right:{y:533.884033203125,x:-527.3307495117188,z:110.57189178466797}}},{coords:{y:626.95556640625,x:-507.3460388183594,z:131.9911651611328},offset:{left:{y:624.6520385742188,x:-513.9551391601562,z:131.87338256835938},right:{y:629.2590942382812,x:-500.7369689941406,z:132.10894775390625}}},{coords:{y:663.0487670898438,x:-485.263427734375,z:143.07638549804688},offset:{left:{y:669.006591796875,x:-485.9726867675781,z:143.03952026367188},right:{y:657.0909423828125,x:-484.5541687011719,z:143.11325073242188}}},{coords:{y:610.3541870117188,x:-270.8403625488281,z:181.84706115722656},offset:{left:{y:616.1463623046875,x:-269.2749328613281,z:181.8556365966797},right:{y:604.56201171875,x:-272.4057922363281,z:181.83848571777344}}},{coords:{y:604.7432861328125,x:-42.42024612426758,z:207.0579833984375},offset:{left:{y:609.5917358398438,x:-45.95465087890625,z:207.08377075195312},right:{y:599.8948364257812,x:-38.8858413696289,z:207.03219604492188}}},{coords:{y:718.4044799804688,x:116.28131866455078,z:208.86550903320312},offset:{left:{y:718.2862548828125,x:110.28461456298828,z:209.02537536621094},right:{y:718.522705078125,x:122.27802276611328,z:208.7056427001953}}},{coords:{y:799.2260131835938,x:238.77450561523438,z:199.04469299316406},offset:{left:{y:804.0247192382812,x:235.18409729003906,z:199.3297882080078},right:{y:794.4273071289062,x:242.3649139404297,z:198.7595977783203}}},{coords:{y:927.1643676757812,x:310.8438415527344,z:205.35134887695312},offset:{left:{y:928.9743041992188,x:303.0513610839844,z:205.38693237304688},right:{y:925.3544311523438,x:318.6363220214844,z:205.31576538085938}}},{coords:{y:1193.923095703125,x:258.01654052734375,z:226.7135009765625},offset:{left:{y:1192.5252685546875,x:245.09426879882812,z:226.96063232421875},right:{y:1195.3209228515625,x:270.9388122558594,z:226.46636962890625}}},{coords:{y:1375.193359375,x:168.4902801513672,z:248.507568359375},offset:{left:{y:1369.9573974609375,x:163.8445281982422,z:248.46865844726562},right:{y:1380.4293212890625,x:173.1360321044922,z:248.54647827148438}}},{coords:{y:1434.223876953125,x:12.74501514434814,z:272.5143127441406},offset:{left:{y:1426.4483642578125,x:14.6230936050415,z:272.39276123046875},right:{y:1441.9993896484375,x:10.86693668365478,z:272.6358642578125}}},{coords:{y:1430.10302734375,x:-196.5377197265625,z:289.3945617675781},offset:{left:{y:1431.94384765625,x:-188.75282287597656,z:289.3106689453125},right:{y:1428.26220703125,x:-204.32261657714844,z:289.47845458984375}}},{coords:{y:1279.01708984375,x:-249.0675506591797,z:308.6162109375},offset:{left:{y:1274.5106201171875,x:-243.7163848876953,z:308.37823486328125},right:{y:1283.5235595703125,x:-254.41871643066406,z:308.85418701171875}}},{coords:{y:1179.0111083984375,x:-388.5520324707031,z:325.3349914550781},offset:{left:{y:1169.4534912109375,x:-391.49334716796875,z:325.3368835449219},right:{y:1188.5687255859375,x:-385.6107177734375,z:325.3330993652344}}}],H={id:"YKN65254",name:"Kalle Kula",Checkpoint:1,finished:!1,lap:1},V={id:"YKN65252",name:"Berra Kula",Checkpoint:1,finished:!1,lap:1},Q=[{id:1,checkpoints:F,creatorId:H.id,creatorName:H.name,distance:7212,name:"Canyon",raceId:"LR-5565",record:{name:H.name,time:8320}},{id:2,checkpoints:F,creatorId:V.id,creatorName:V.name,distance:2500,name:"The Docks",raceId:"LR-5564",record:{name:V.name,time:80490}}],X=(M(M({},Q[0]),{raceCreatorId:"server",raceCreatorName:"Server",laps:0,started:!1,waiting:!0,lastLeaderboard:{},racers:(K={},K[H.id]=H,K)}),M(M({},Q[1]),{raceCreatorId:H.id,raceCreatorName:H.name,laps:5,started:!0,waiting:!1,lastLeaderboard:{},racers:(B={},B[V.id]=V,B)}),M(M({},Q[1]),{raceCreatorId:V.id,raceCreatorName:V.name,laps:12,started:!1,waiting:!1,lastLeaderboard:{},racers:(Y={},Y[H.id]=H,Y[V.id]=V,Y)}),M(M({},Q[0]),{raceCreatorId:H.id,raceCreatorName:H.name,laps:0,started:!1,waiting:!1,lastLeaderboard:{},racers:{}}),function(e,t,n,r){return new(n||(n=Promise))((function(a,o){function c(e){try{i(r.next(e))}catch(e){o(e)}}function l(e){try{i(r.throw(e))}catch(e){o(e)}}function i(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(c,l)}i((r=r.apply(e,t||[])).next())}))}),$=(0,U.cn)({key:"qb:races",default:(0,U.nZ)({key:"qb:defaultRaces",get:function(){return X(void 0,void 0,void 0,(function(){var e;return function(e,t){var n,r,a,o,c={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return o={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function l(o){return function(l){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;c;)try{if(n=1,r&&(a=2&o[0]?r.return:o[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,o[1])).done)return a;switch(r=0,a&&(o=[2&o[0],a.value]),o[0]){case 0:case 1:a=o;break;case 4:return c.label++,{value:o[1],done:!1};case 5:c.label++,r=o[1],o=[0];continue;case 7:o=c.ops.pop(),c.trys.pop();continue;default:if(!((a=(a=c.trys).length>0&&a[a.length-1])||6!==o[0]&&2!==o[0])){c=0;continue}if(3===o[0]&&(!a||o[1]>a[0]&&o[1]<a[3])){c.label=o[1];break}if(6===o[0]&&c.label<a[1]){c.label=a[1],a=o;break}if(a&&c.label<a[2]){c.label=a[2],c.ops.push(o);break}a[2]&&c.ops.pop(),c.trys.pop();continue}o=t.call(e,c)}catch(e){o=[6,e],r=0}finally{n=a=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,l])}}}(this,(function(t){switch(t.label){case 0:return t.trys.push([0,2,,3]),[4,_(N.GetRaces)];case 1:return(e=t.sent()).data?[2,e.data]:(console.log("no response data"),[2,[]]);case 2:return t.sent(),[2,[]];case 3:return[2]}}))}))}})}),ee=n(2594),te=n(4148),ne=n(5295),re=n(8515),ae=n(7109),oe=n(461),ce=n(2643),le=n(4563),ie=n(9161),ue=n(6914),se=(0,U.cn)({key:"npwd-qb-racing:user",default:(0,U.nZ)({key:"npwd-qb-racing:default-user",get:function(){return e=void 0,t=void 0,r=function(){var e;return function(e,t){var n,r,a,o,c={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return o={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function l(o){return function(l){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;c;)try{if(n=1,r&&(a=2&o[0]?r.return:o[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,o[1])).done)return a;switch(r=0,a&&(o=[2&o[0],a.value]),o[0]){case 0:case 1:a=o;break;case 4:return c.label++,{value:o[1],done:!1};case 5:c.label++,r=o[1],o=[0];continue;case 7:o=c.ops.pop(),c.trys.pop();continue;default:if(!((a=(a=c.trys).length>0&&a[a.length-1])||6!==o[0]&&2!==o[0])){c=0;continue}if(3===o[0]&&(!a||o[1]>a[0]&&o[1]<a[3])){c.label=o[1];break}if(6===o[0]&&c.label<a[1]){c.label=a[1],a=o;break}if(a&&c.label<a[2]){c.label=a[2],c.ops.push(o);break}a[2]&&c.ops.pop(),c.trys.pop();continue}o=t.call(e,c)}catch(e){o=[6,e],r=0}finally{n=a=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,l])}}}(this,(function(t){switch(t.label){case 0:return t.trys.push([0,2,,3]),[4,_(N.GetUser)];case 1:return(e=t.sent()).data?[2,e.data]:(console.log("no response data"),[2,null]);case 2:return t.sent(),[2,null];case 3:return[2]}}))},new((n=void 0)||(n=Promise))((function(a,o){function c(e){try{i(r.next(e))}catch(e){o(e)}}function l(e){try{i(r.throw(e))}catch(e){o(e)}}function i(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(c,l)}i((r=r.apply(e,t||[])).next())}));var e,t,n,r}})}),fe=function(e,t,n,r){return new(n||(n=Promise))((function(a,o){function c(e){try{i(r.next(e))}catch(e){o(e)}}function l(e){try{i(r.throw(e))}catch(e){o(e)}}function i(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(c,l)}i((r=r.apply(e,t||[])).next())}))},de=function(e,t){var n,r,a,o,c={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return o={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function l(o){return function(l){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;c;)try{if(n=1,r&&(a=2&o[0]?r.return:o[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,o[1])).done)return a;switch(r=0,a&&(o=[2&o[0],a.value]),o[0]){case 0:case 1:a=o;break;case 4:return c.label++,{value:o[1],done:!1};case 5:c.label++,r=o[1],o=[0];continue;case 7:o=c.ops.pop(),c.trys.pop();continue;default:if(!((a=(a=c.trys).length>0&&a[a.length-1])||6!==o[0]&&2!==o[0])){c=0;continue}if(3===o[0]&&(!a||o[1]>a[0]&&o[1]<a[3])){c.label=o[1];break}if(6===o[0]&&c.label<a[1]){c.label=a[1],a=o;break}if(a&&c.label<a[2]){c.label=a[2],c.ops.push(o);break}a[2]&&c.ops.pop(),c.trys.pop();continue}o=t.call(e,c)}catch(e){o=[6,e],r=0}finally{n=a=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,l])}}};const pe=function(e){var t,n=e.race,a=e.onUpdate,o=(0,U.sJ)(se),c=null!==(t=null==o?void 0:o.citizenid)&&void 0!==t?t:"",l=0===n.laps,i=n.raceCreatorId===c,u=Boolean(n.racers[c]),s=Object.keys(n.racers).length,f=function(){return fe(void 0,void 0,void 0,(function(){return de(this,(function(e){switch(e.label){case 0:return[4,_(N.LeaveRace,{raceId:n.raceId,raceName:n.name})];case 1:return e.sent(),a(),[2]}}))}))},d=function(){return fe(void 0,void 0,void 0,(function(){return de(this,(function(e){switch(e.label){case 0:return[4,_(N.StopRace,n.raceId)];case 1:return e.sent(),a(),[2]}}))}))};return r.createElement(ne.Z,{elevation:4},r.createElement(re.Z,{title:"".concat(n.name," ").concat(l?"(Sprint)":""),subheader:n.raceCreatorName,avatar:r.createElement(ae.Z,{alt:n.raceCreatorName,sx:{backgroundColor:"primary.main",color:"primary.contrastText"}},n.raceCreatorName.substring(0,1)),action:r.createElement(oe.Z,{color:n.started?"primary":"default",label:n.started?"Started":"Not started"})}),r.createElement(ce.Z,null,r.createElement(J.Z,{direction:"row",spacing:1},r.createElement(le.Z,{title:"Competitors"},r.createElement(oe.Z,{icon:r.createElement(ee.Z,{fontSize:"small",sx:{paddingLeft:"0.35rem"}}),label:"".concat(s)})),r.createElement(le.Z,{title:"".concat(l?"0 laps (Sprint)":"Laps")},r.createElement(oe.Z,{label:"".concat(l?"Sprint":n.laps),icon:r.createElement(te.Z,{fontSize:"small",sx:{paddingLeft:"0.25rem"}})})),r.createElement(le.Z,{title:"Race distance"},r.createElement(oe.Z,{label:"".concat(n.distance,"m")})))),r.createElement(j.Z,{light:!0}),n.started?r.createElement(ie.Z,{disableSpacing:!0},r.createElement(J.Z,{direction:"row",spacing:1,marginLeft:"auto"},i&&r.createElement(ue.Z,{color:"error",onClick:d},"Stop"),u&&r.createElement(ue.Z,{color:"error",onClick:f},"Abort"))):r.createElement(ie.Z,{disableSpacing:!0},r.createElement(J.Z,{direction:"row",spacing:1,marginLeft:"auto"},i&&r.createElement(ue.Z,{color:"error",onClick:d},"Delete"),u?r.createElement(ue.Z,{color:"error",onClick:f},"Leave"):r.createElement(ue.Z,{color:"success",onClick:function(){return fe(void 0,void 0,void 0,(function(){return de(this,(function(e){switch(e.label){case 0:return[4,_(D.GetDistanceToRace,{raceId:n.raceId,joined:!0})];case 1:return e.sent()?[4,_(N.JoinRace,{raceId:n.raceId,raceName:n.name})]:[2];case 2:return e.sent(),a(),[2]}}))}))}},"Join"),i&&r.createElement(ue.Z,{color:"success",disabled:0===s,onClick:function(){return fe(void 0,void 0,void 0,(function(){return de(this,(function(e){switch(e.label){case 0:return[4,_(N.StartRace,n.raceId)];case 1:return e.sent(),a(),[2]}}))}))}},"Start"))))},he=function(){var e=(0,U.sJ)($),t=(0,U.C)($);return r.createElement(J.Z,{spacing:1},e.map((function(e){return r.createElement(pe,{key:e.id,race:e,onUpdate:t})})))},me=function(){return r.createElement("div",null,r.createElement(E.Z,{variant:"h6"},"Active races"),r.createElement(E.Z,{variant:"caption",sx:{lineHeight:1}},"You can easily setup a track yourself from the navigation below."),r.createElement(j.Z,{sx:{margin:"1.5rem 0"}}),r.createElement(r.Suspense,{fallback:r.createElement(A.Z,null)},r.createElement(he,null)))};var ye=n(2428),be=n(1781),ve=function(e,t,n,r){return new(n||(n=Promise))((function(a,o){function c(e){try{i(r.next(e))}catch(e){o(e)}}function l(e){try{i(r.throw(e))}catch(e){o(e)}}function i(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(c,l)}i((r=r.apply(e,t||[])).next())}))},xe=function(e,t){var n,r,a,o,c={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return o={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function l(o){return function(l){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;c;)try{if(n=1,r&&(a=2&o[0]?r.return:o[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,o[1])).done)return a;switch(r=0,a&&(o=[2&o[0],a.value]),o[0]){case 0:case 1:a=o;break;case 4:return c.label++,{value:o[1],done:!1};case 5:c.label++,r=o[1],o=[0];continue;case 7:o=c.ops.pop(),c.trys.pop();continue;default:if(!((a=(a=c.trys).length>0&&a[a.length-1])||6!==o[0]&&2!==o[0])){c=0;continue}if(3===o[0]&&(!a||o[1]>a[0]&&o[1]<a[3])){c.label=o[1];break}if(6===o[0]&&c.label<a[1]){c.label=a[1],a=o;break}if(a&&c.label<a[2]){c.label=a[2],c.ops.push(o);break}a[2]&&c.ops.pop(),c.trys.pop();continue}o=t.call(e,c)}catch(e){o=[6,e],r=0}finally{n=a=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,l])}}},ge=function(e,t,n){if(n||2===arguments.length)for(var r,a=0,o=t.length;a<o;a++)!r&&a in t||(r||(r=Array.prototype.slice.call(t,0,a)),r[a]=t[a]);return e.concat(r||Array.prototype.slice.call(t))},we=(0,U.cn)({key:"npwd-qb-racing:tracks",default:(0,U.nZ)({key:"npwd-qb-racing:defaultTracks",get:function(){return ve(void 0,void 0,void 0,(function(){var e;return xe(this,(function(t){switch(t.label){case 0:return t.trys.push([0,2,,3]),[4,_(N.GetTracks)];case 1:return(e=t.sent()).data?[2,e.data]:(console.log("no response data"),[2,[]]);case 2:return t.sent(),[2,[]];case 3:return[2]}}))}))}})}),Ee=(0,U.nZ)({key:"npwd-qb-racing:sortedTracks",get:function(e){var t=e.get;return ve(void 0,void 0,void 0,(function(){var e;return xe(this,(function(n){return e=t(we),[2,ge([],e,!0).sort((function(e,t){var n,r;return(null!==(n=e.distanceToTrack)&&void 0!==n?n:0)>(null!==(r=t.distanceToTrack)&&void 0!==r?r:0)?1:-1}))]}))}))}}),ze=n(7893),ke=n(6761),Ze=n(3761),Se=n(5370),Te=n(6867),Ce=n(4115),Re=n(3269),Ie=n(3797),qe=n(8885),Le=n(9334);const Pe=function(e){var t,n,a,o,c,l,i,u=e.track,s=e.isEditable,f=e.onDelete,d=(0,P.k6)(),p=(0,U.sJ)(se),h=(0,r.useRef)(null),m=(0,r.useState)(!1),y=m[0],b=m[1],v=function(){b((function(e){return!e}))},x=u.creatorId===(null==p?void 0:p.citizenid);return r.createElement(ne.Z,{elevation:4},r.createElement(re.Z,{title:u.name,subheader:u.creatorName,avatar:r.createElement(ae.Z,{alt:u.creatorName,sx:{backgroundColor:"primary.main",color:"primary.contrastText"}},null===(t=null==u?void 0:u.creatorName)||void 0===t?void 0:t.substring(0,1)),action:s&&r.createElement(Te.Z,{onClick:v,ref:h},r.createElement(ze.Z,null))}),r.createElement(Ce.Z,{open:y,onClose:v,anchorEl:h.current,anchorOrigin:{vertical:"bottom",horizontal:"right"},transformOrigin:{vertical:"top",horizontal:"right"}},r.createElement(Re.Z,{dense:!0,disablePadding:!0},x&&r.createElement(Ie.Z,{onClick:function(){return e=void 0,t=void 0,r=function(){return function(e,t){var n,r,a,o,c={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return o={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function l(o){return function(l){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;c;)try{if(n=1,r&&(a=2&o[0]?r.return:o[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,o[1])).done)return a;switch(r=0,a&&(o=[2&o[0],a.value]),o[0]){case 0:case 1:a=o;break;case 4:return c.label++,{value:o[1],done:!1};case 5:c.label++,r=o[1],o=[0];continue;case 7:o=c.ops.pop(),c.trys.pop();continue;default:if(!((a=(a=c.trys).length>0&&a[a.length-1])||6!==o[0]&&2!==o[0])){c=0;continue}if(3===o[0]&&(!a||o[1]>a[0]&&o[1]<a[3])){c.label=o[1];break}if(6===o[0]&&c.label<a[1]){c.label=a[1],a=o;break}if(a&&c.label<a[2]){c.label=a[2],c.ops.push(o);break}a[2]&&c.ops.pop(),c.trys.pop();continue}o=t.call(e,c)}catch(e){o=[6,e],r=0}finally{n=a=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,l])}}}(this,(function(e){switch(e.label){case 0:return[4,_(N.DeleteTrack,u.raceId)];case 1:return e.sent()&&f&&f(),[2]}}))},new((n=void 0)||(n=Promise))((function(a,o){function c(e){try{i(r.next(e))}catch(e){o(e)}}function l(e){try{i(r.throw(e))}catch(e){o(e)}}function i(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(c,l)}i((r=r.apply(e,t||[])).next())}));var e,t,n,r}},r.createElement(qe.Z,null,r.createElement(ke.Z,null)),r.createElement(Le.Z,null,"Delete")),r.createElement(Ie.Z,{onClick:function(){return d.push("".concat("","/setupRace/").concat(u.id))}},r.createElement(qe.Z,null,r.createElement(Ze.Z,null)),r.createElement(Le.Z,null,"Start race from this track")))),r.createElement(ce.Z,null,r.createElement(J.Z,{direction:"row",spacing:1},r.createElement(le.Z,{title:"Track record"},r.createElement(oe.Z,{icon:r.createElement(Se.Z,{fontSize:"small",sx:{paddingLeft:"0.35rem"}}),label:"".concat((o=null!==(a=null===(n=u.record)||void 0===n?void 0:n.time)&&void 0!==a?a:0,c=o/100,l=Math.floor(c/60),i=Math.floor(c-60*l),"".concat(l,"m ").concat(i,"s")))})),r.createElement(le.Z,{title:"Number of checkpoints"},r.createElement(oe.Z,{label:"".concat(u.checkpoints.length),icon:r.createElement(te.Z,{fontSize:"small",sx:{paddingLeft:"0.25rem"}})})),r.createElement(le.Z,{title:"Track length"},r.createElement(oe.Z,{label:"".concat(u.distance,"m")})))))};var Ge=z.Z.div(Oe||(Oe=function(e,t){return Object.defineProperty?Object.defineProperty(e,"raw",{value:t}):e.raw=t,e}(["\n  position: absolute;\n  bottom: 4.5rem;\n  right: 1.5rem;\n"],["\n  position: absolute;\n  bottom: 4.5rem;\n  right: 1.5rem;\n"])));const Ne=function(){var e=(0,P.k6)(),t=(0,U.sJ)(Ee),n=(0,U.C)(Ee),a=(0,r.useState)(!1),o=a[0],c=a[1];return(0,r.useEffect)((function(){_(D.GetIsAuthorizedToCreateRaces).then((function(e){c(e[0])}))}),[]),r.createElement("div",null,r.createElement(E.Z,{variant:"h6"},"Tracks"),r.createElement(E.Z,{variant:"caption"},"Available tracks are listed below."),r.createElement(j.Z,{light:!0,sx:{margin:"1.5rem 0"}}),r.createElement(J.Z,{spacing:1},t.map((function(e){return r.createElement(Pe,{key:e.id,track:e,isEditable:!0,onDelete:n})}))),r.createElement(Ge,null,r.createElement(be.Z,{color:"success",onClick:function(){return e.push("/setupTrack")},disabled:!o},r.createElement(ye.Z,null))))};var Oe,De=n(5271),je=n(6749),Ae=n(1508),Je=n(1177),Ue=n(2981),We=function(){return We=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e},We.apply(this,arguments)};const _e=function(){var e=(0,U.sJ)(Ee),t=(0,P.k6)(),n=(0,P.UO)().trackId,a=e.find((function(e){return e.id===parseInt(n)})),o=(0,r.useState)(null!=a?a:null),c=o[0],l=o[1],u=(0,r.useState)(""),s=u[0],f=u[1],d=isNaN(parseInt(s,10)),p=!c||d;return r.createElement("div",null,r.createElement(E.Z,{variant:"h6"},"Setup a new race"),r.createElement(E.Z,{variant:"caption"},"If you create a race with 0 laps, it'll become a sprint instead."),r.createElement(j.Z,{light:!0,sx:{margin:"1.5rem 0"}}),r.createElement(J.Z,{spacing:1},r.createElement(E.Z,{variant:"h6"},"Select racing track"),r.createElement(je.Z,{defaultValue:a,options:e,getOptionLabel:function(e){return e.name},onChange:function(e,t){return l(t)},renderOption:function(e,t){return r.createElement(Ae.Z,We({component:"li",p:2},e),r.createElement(J.Z,{direction:"row",justifyContent:"space-between",display:"flex",width:"100%",alignItems:"center"},r.createElement(J.Z,null,r.createElement(E.Z,null,t.name),r.createElement(E.Z,{variant:"caption",color:"text.secondary"},t.creatorName)),r.createElement(J.Z,{spacing:.5,direction:"row"},r.createElement(oe.Z,{size:"small",label:"".concat(t.checkpoints.length),icon:r.createElement(te.Z,{fontSize:"small",sx:{paddingLeft:"0.25rem"}})}),r.createElement(oe.Z,{size:"small",label:"".concat(t.distance,"m")}),t.distanceToTrack&&r.createElement(le.Z,{title:"Distance to the track"},r.createElement(oe.Z,{size:"small",icon:r.createElement(De.Z,{fontSize:"small",sx:{paddingLeft:"0.25rem"}}),label:"".concat(Math.floor(t.distanceToTrack),"m")})))))},renderInput:function(e){return r.createElement(Je.Z,We({},e,{placeholder:"Select racing track",inputProps:We(We({},e.inputProps),{autoComplete:"racing-track"})}))}})),r.createElement("form",{onSubmit:function(e){return n=void 0,r=void 0,o=function(){return function(e,t){var n,r,a,o,c={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return o={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function l(o){return function(l){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;c;)try{if(n=1,r&&(a=2&o[0]?r.return:o[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,o[1])).done)return a;switch(r=0,a&&(o=[2&o[0],a.value]),o[0]){case 0:case 1:a=o;break;case 4:return c.label++,{value:o[1],done:!1};case 5:c.label++,r=o[1],o=[0];continue;case 7:o=c.ops.pop(),c.trys.pop();continue;default:if(!((a=(a=c.trys).length>0&&a[a.length-1])||6!==o[0]&&2!==o[0])){c=0;continue}if(3===o[0]&&(!a||o[1]>a[0]&&o[1]<a[3])){c.label=o[1];break}if(6===o[0]&&c.label<a[1]){c.label=a[1],a=o;break}if(a&&c.label<a[2]){c.label=a[2],c.ops.push(o);break}a[2]&&c.ops.pop(),c.trys.pop();continue}o=t.call(e,c)}catch(e){o=[6,e],r=0}finally{n=a=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,l])}}}(this,(function(n){switch(n.label){case 0:return e.preventDefault(),p?[2]:(_(D.GetDistanceToRace,{raceId:c.raceId,joined:!1}),[4,_(N.SetupRace,{trackId:c.raceId,laps:parseInt(s,10)})]);case 1:return n.sent(),t.push(""),[2]}}))},new((a=void 0)||(a=Promise))((function(e,t){function c(e){try{i(o.next(e))}catch(e){t(e)}}function l(e){try{i(o.throw(e))}catch(e){t(e)}}function i(t){var n;t.done?e(t.value):(n=t.value,n instanceof a?n:new a((function(e){e(n)}))).then(c,l)}i((o=o.apply(n,r||[])).next())}));var n,r,a,o},"aria-disabled":p},r.createElement(J.Z,{spacing:3},r.createElement(Ue.Z,{in:Boolean(c)},c&&r.createElement(i.Z,{sx:{marginTop:3}},r.createElement(Pe,{track:c}))),r.createElement(Je.Z,{label:"Select number of laps",type:"number",value:s,onChange:function(e){return f(e.target.value)},helperText:"If lap count is 0, it will create a sprint."}),r.createElement(ue.Z,{size:"large",fullWidth:!0,type:"submit",disabled:p,variant:"contained"},"Setup the race"))))};var Ke=n(9743),Be=n(2288);const Ye=function(){var e=(0,r.useState)(""),t=e[0],n=e[1],a=(0,r.useState)(""),o=a[0],c=a[1];return r.createElement("div",null,r.createElement(E.Z,{variant:"h6"},"Setup a new track"),r.createElement(E.Z,{variant:"caption"},"Once there's a race created it will show up here. Come back later!"),r.createElement(j.Z,{light:!0,sx:{margin:"1.5rem 0"}}),r.createElement("form",{onSubmit:function(e){return n=void 0,r=void 0,o=function(){var n,r;return function(e,t){var n,r,a,o,c={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return o={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function l(o){return function(l){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;c;)try{if(n=1,r&&(a=2&o[0]?r.return:o[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,o[1])).done)return a;switch(r=0,a&&(o=[2&o[0],a.value]),o[0]){case 0:case 1:a=o;break;case 4:return c.label++,{value:o[1],done:!1};case 5:c.label++,r=o[1],o=[0];continue;case 7:o=c.ops.pop(),c.trys.pop();continue;default:if(!((a=(a=c.trys).length>0&&a[a.length-1])||6!==o[0]&&2!==o[0])){c=0;continue}if(3===o[0]&&(!a||o[1]>a[0]&&o[1]<a[3])){c.label=o[1];break}if(6===o[0]&&c.label<a[1]){c.label=a[1],a=o;break}if(a&&c.label<a[2]){c.label=a[2],c.ops.push(o);break}a[2]&&c.ops.pop(),c.trys.pop();continue}o=t.call(e,c)}catch(e){o=[6,e],r=0}finally{n=a=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,l])}}}(this,(function(a){switch(a.label){case 0:return e.preventDefault(),c(""),[4,_(D.GetIsAuthorizedToCreateRaces,t)];case 1:return n=a.sent(),r=n[0],n[1]?r?(_(N.CreateTrack,t),[2]):(c("You are not authorized to create tracks."),[2]):(c("Track name is not available."),[2])}}))},new((a=void 0)||(a=Promise))((function(e,t){function c(e){try{i(o.next(e))}catch(e){t(e)}}function l(e){try{i(o.throw(e))}catch(e){t(e)}}function i(t){var n;t.done?e(t.value):(n=t.value,n instanceof a?n:new a((function(e){e(n)}))).then(c,l)}i((o=o.apply(n,r||[])).next())}));var n,r,a,o}},r.createElement(J.Z,{spacing:1.5},r.createElement(Je.Z,{label:"Track name",value:t,onChange:function(e){return n(e.target.value)}}),r.createElement(ue.Z,{type:"submit"},"Start creating track"),o&&r.createElement(Be.Z,{color:"error",icon:r.createElement(Ke.Z,null)},o))))},Me=function(){return r.createElement(P.rs,null,r.createElement(P.AW,{exact:!0,path:"/",component:me}),r.createElement(P.AW,{path:"/setupRace/:trackId?",component:_e}),r.createElement(P.AW,{path:"/setupTrack",component:Ye}),r.createElement(P.AW,{path:"/tracks",component:Ne}))};var Fe=function(){(0,U.sJ)($),(0,U.sJ)(se),(0,U.sJ)(we);var e=(0,U.C)($),t=(0,U.C)(we),n=(0,U.C)(se);return(0,l.useNuiEvent)({event:D.UpdateData,callback:function(){n(),e(),t()}}),null},He=function(){var e=(0,r.useState)(null),t=e[0],n=e[1];return(0,r.useEffect)((function(){var e,t,r,a;(e=void 0,t=void 0,r=void 0,a=function(){var e;return function(e,t){var n,r,a,o,c={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return o={next:l(0),throw:l(1),return:l(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function l(o){return function(l){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;c;)try{if(n=1,r&&(a=2&o[0]?r.return:o[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,o[1])).done)return a;switch(r=0,a&&(o=[2&o[0],a.value]),o[0]){case 0:case 1:a=o;break;case 4:return c.label++,{value:o[1],done:!1};case 5:c.label++,r=o[1],o=[0];continue;case 7:o=c.ops.pop(),c.trys.pop();continue;default:if(!((a=(a=c.trys).length>0&&a[a.length-1])||6!==o[0]&&2!==o[0])){c=0;continue}if(3===o[0]&&(!a||o[1]>a[0]&&o[1]<a[3])){c.label=o[1];break}if(6===o[0]&&c.label<a[1]){c.label=a[1],a=o;break}if(a&&c.label<a[2]){c.label=a[2],c.ops.push(o);break}a[2]&&c.ops.pop(),c.trys.pop();continue}o=t.call(e,c)}catch(e){o=[6,e],r=0}finally{n=a=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,l])}}}(this,(function(t){switch(t.label){case 0:return null==window.GetSettings?[3,2]:[4,window.GetSettings()];case 1:return e=t.sent(),[3,3];case 2:e=null,t.label=3;case 3:return[2,e]}}))},new(r||(r=Promise))((function(n,o){function c(e){try{i(a.next(e))}catch(e){o(e)}}function l(e){try{i(a.throw(e))}catch(e){o(e)}}function i(e){var t;e.done?n(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(c,l)}i((a=a.apply(e,t||[])).next())}))).then(n)}),[]),t},Ve=function(e,t){return Object.defineProperty?Object.defineProperty(e,"raw",{value:t}):e.raw=t,e},Qe=(0,c.ZP)(i.Z)(tt||(tt=Ve(["\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n  max-height: 100%;\n"],["\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n  max-height: 100%;\n"]))),Xe=c.ZP.div(nt||(nt=Ve(["\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n  padding: 1.5rem;\n  max-height: calc(100% - 3.5rem - ",");\n  overflow: auto;\n"],["\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n  padding: 1.5rem;\n  max-height: calc(100% - 3.5rem - ",");\n  overflow: auto;\n"])),k),$e=function(){var e,t=He();return r.createElement(u.Z,{injectFirst:!0},r.createElement(v,{mode:null!==(e=null==t?void 0:t.display.theme)&&void 0!==e?e:"light"},r.createElement(Qe,{square:!0,elevation:0},r.createElement(r.Suspense,{fallback:r.createElement(s.Z,{color:"primary",sx:{position:"absolute",top:0,left:0,width:"100%"}})},r.createElement(Fe,null)),r.createElement(S,null,"Racing"),r.createElement(Xe,null,r.createElement(r.Suspense,{fallback:r.createElement(s.Z,{color:"primary",sx:{position:"absolute",top:0,left:0,width:"100%"}})},r.createElement(Me,null))),r.createElement(G,null))))};const et=function(){return r.createElement(l.NuiProvider,null,r.createElement($e,null))};var tt,nt,rt,at=c.ZP.div(rt||(rt=function(e,t){return Object.defineProperty?Object.defineProperty(e,"raw",{value:t}):e.raw=t,e}(["\n  z-index: 2;\n  position: absolute;\n  bottom: 40px;\n  left: 1px;\n  right: 1px;\n  top: 42px;\n  display: flex;\n  flex-direction: column;\n  background-position: center;\n  background-size: cover;\n  background-repeat: no-repeat;\n  border-radius: 20px;\n  overflow: hidden;\n"],["\n  z-index: 2;\n  position: absolute;\n  bottom: 40px;\n  left: 1px;\n  right: 1px;\n  top: 42px;\n  display: flex;\n  flex-direction: column;\n  background-position: center;\n  background-size: cover;\n  background-repeat: no-repeat;\n  border-radius: 20px;\n  overflow: hidden;\n"])));a.render(r.createElement((function(){return r.createElement(o.UT,null,r.createElement(r.Suspense,{fallback:"Loading app"},r.createElement(U.Wh,null,r.createElement(l.NuiProvider,null,r.createElement(at,null,r.createElement(et,null))))))}),null),document.getElementById("root"))}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,